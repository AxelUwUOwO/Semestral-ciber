
services:
  # NGINX
  app:
    build:
      context: .
      dockerfile: dockerfile-nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ../config/nginx.conf:/etc/nginx/conf.d/default.conf
      - ../certificate/selfsigned.crt:/etc/ssl/certs/selfsigned.crt
      - ../certificate/selfsigned.key:/etc/ssl/private/selfsigned.key
    networks:
      - wpsite
  # REDIS
  redis:
    image: redis:latest
    restart: always
    networks: 
      - wpsite
  # MYSQL Database
  database:
    image: mysql:8.0
    volumes: 
      - db_data:/var/lib/mysql
    restart: always
    command: --authentication_policy=caching_sha2_password
    environment: 
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
    networks: 
      - wpsite
  # WORDPRESS
  wordpress:
    depends_on:
      - database 
    image: wordpress:latest
    restart: unless-stopped
    volumes: 
      - './:/var/www/html'
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    environment: 
      WORDPRESS_DB_HOST: database:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_CONFIG_EXTRA: 
        define('WP_REDIS_HOST', 'redis');
    networks: 
      - wpsite
  # WORDPRESS 2
  wordpress2:
    depends_on:
      - database 
    image: wordpress:latest
    restart: unless-stopped
    volumes: 
      - './:/var/www/html'
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    environment: 
      WORDPRESS_DB_HOST: database:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_CONFIG_EXTRA: 
        define('WP_REDIS_HOST', 'redis');
    networks: 
      - wpsite
        
networks:
  wpsite:
volumes:
  db_data:
